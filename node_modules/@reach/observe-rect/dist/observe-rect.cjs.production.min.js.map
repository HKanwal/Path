{"version":3,"file":"observe-rect.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["let props: (keyof DOMRect)[] = [\n  'bottom',\n  'height',\n  'left',\n  'right',\n  'top',\n  'width'\n];\n\nlet rectChanged = (a: DOMRect = {} as DOMRect, b: DOMRect = {} as DOMRect) =>\n  props.some(prop => a[prop] !== b[prop]);\n\nlet observedNodes = new Map<HTMLElement, RectProps>();\nlet rafId: number;\n\nlet run = () => {\n  const changedStates: RectProps[] = [];\n  observedNodes.forEach((state, node) => {\n    let newRect = node.getBoundingClientRect();\n    if (rectChanged(newRect, state.rect)) {\n      state.rect = newRect;\n      changedStates.push(state);\n    }\n  });\n\n  changedStates.forEach(state => {\n    state.callbacks.forEach(cb => cb(state.rect));\n  });\n\n  rafId = window.requestAnimationFrame(run);\n};\n\nexport default function observeRect(\n  node: HTMLElement,\n  cb: (rect: DOMRect) => void\n) {\n  return {\n    observe() {\n      let wasEmpty = observedNodes.size === 0;\n      if (observedNodes.has(node)) {\n        observedNodes.get(node)!.callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n      if (wasEmpty) run();\n    },\n\n    unobserve() {\n      let state = observedNodes.get(node);\n      if (state) {\n        // Remove the callback\n        const index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1);\n\n        // Remove the node reference\n        if (!state.callbacks.length) observedNodes.delete(node);\n\n        // Stop the loop\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\n\nexport type PartialRect = Partial<DOMRect>;\n\nexport type RectProps = {\n  rect: DOMRect | undefined;\n  hasRectChanged: boolean;\n  callbacks: Function[];\n};\n"],"names":["rafId","props","observedNodes","Map","node","cb","observe","wasEmpty","size","has","get","callbacks","push","set","rect","undefined","hasRectChanged","run","changedStates","forEach","state","a","b","newRect","getBoundingClientRect","some","prop","window","requestAnimationFrame","unobserve","index","indexOf","splice","length","cancelAnimationFrame"],"mappings":"oEAAA,IAaIA,EAbAC,EAA2B,CAC7B,SACA,SACA,OACA,QACA,MACA,SAMEC,EAAgB,IAAIC,6BAqBtBC,EACAC,SAEO,CACLC,QAAA,eACMC,EAAkC,IAAvBL,EAAcM,KACzBN,EAAcO,IAAIL,GACpBF,EAAcQ,IAAIN,GAAOO,UAAUC,KAAKP,GAExCH,EAAcW,IAAIT,EAAM,CACtBU,UAAMC,EACNC,gBAAgB,EAChBL,UAAW,CAACN,KAGZE,GAjCA,SAANU,QACIC,EAA6B,GACnChB,EAAciB,SAAQ,SAACC,EAAOhB,OARbiB,EAA4BC,EASvCC,EAAUnB,EAAKoB,kCATJH,EAUCE,KAVDF,EAAa,cAAeC,EAUlBF,EAAMN,QAVYQ,EAAa,IAC1DrB,EAAMwB,MAAK,SAAAC,UAAQL,EAAEK,KAAUJ,EAAEI,QAU7BN,EAAMN,KAAOS,EACbL,EAAcN,KAAKQ,OAIvBF,EAAcC,SAAQ,SAAAC,GACpBA,EAAMT,UAAUQ,SAAQ,SAAAd,UAAMA,EAAGe,EAAMN,YAGzCd,EAAQ2B,OAAOC,sBAAsBX,GAmBnBA,IAGhBY,yBACMT,EAAQlB,EAAcQ,IAAIN,MAC1BgB,EAAO,KAEHU,EAAQV,EAAMT,UAAUoB,QAAQ1B,GAClCyB,GAAS,GAAGV,EAAMT,UAAUqB,OAAOF,EAAO,GAGzCV,EAAMT,UAAUsB,QAAQ/B,SAAqBE,GAG7CF,EAAcM,MAAM0B,qBAAqBlC"}