{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orrca\\\\OneDrive\\\\Documents\\\\Term 2\\\\2XB3\\\\PATH\\\\src\\\\context\\\\auth\\\\AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport AuthContext from './authContext';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, USER_ERROR, LOGIN_USER, LOGIN_FAILED, LOGOUT } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    isAuthenticated: false,\n    user: {\n      _id: '5e486fe27e9ea246d87561d7'\n    },\n    username: null,\n    current: '5e486fe27e9ea246d87561d7',\n    loading: true,\n    carModel: 'Volkswagen Beetle'\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Load User\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/user');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  };\n\n  const getUsername = async quid => {\n    try {\n      return await axios.get(`/api/users/${quid}`).then(res => {\n        return res.data.username;\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR\n      });\n    }\n  }; // Log user in\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/login', formData, config);\n      dispatch({\n        type: LOGIN_USER,\n        payload: res.data\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAILED\n      });\n    }\n  }; // Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/user', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      }); //  try to load the user after they are registered.\n\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.msg\n      });\n    }\n  }; // Logout\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  });\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      username: state.username,\n      current: state.current,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      carModel: state.carModel,\n      loadUser,\n      register,\n      getUsername,\n      login,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/orrca/OneDrive/Documents/Term 2/2XB3/PATH/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","authReducer","setAuthToken","AuthContext","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","USER_ERROR","LOGIN_USER","LOGIN_FAILED","LOGOUT","AuthState","props","initialState","isAuthenticated","user","_id","username","current","loading","carModel","state","dispatch","loadUser","localStorage","token","res","get","type","payload","data","error","getUsername","quid","then","login","formData","config","headers","post","register","response","msg","logout","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport authReducer from './authReducer';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\nimport AuthContext from './authContext';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  USER_ERROR,\r\n  LOGIN_USER,\r\n  LOGIN_FAILED,\r\n  LOGOUT\r\n} from '../types';\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        isAuthenticated: false,\r\n        user: {\r\n          _id: '5e486fe27e9ea246d87561d7'\r\n        },\r\n        username: null,\r\n        current: '5e486fe27e9ea246d87561d7',\r\n        loading: true,\r\n        carModel: 'Volkswagen Beetle'\r\n    };\r\n    \r\n    const [state, dispatch] = useReducer(authReducer, initialState);\r\n    \r\n    // Load User\r\n    const loadUser = async () => {\r\n      if (localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n      }\r\n  \r\n      try {\r\n        const res = await axios.get('/user');\r\n        dispatch({ type: USER_LOADED, payload: res.data });\r\n      } catch (error) {\r\n        dispatch({ type: AUTH_ERROR });\r\n      }\r\n    };\r\n  \r\n    const getUsername = async quid => {\r\n      try {\r\n        return await axios.get(`/api/users/${quid}`).then(res => {\r\n          return res.data.username;\r\n        });\r\n      } catch (error) {\r\n        dispatch({ type: USER_ERROR });\r\n      }\r\n    };\r\n  \r\n    // Log user in\r\n    const login = async formData => {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n  \r\n      try {\r\n        const res = await axios.post('/login', formData, config);\r\n        dispatch({\r\n          type: LOGIN_USER,\r\n          payload: res.data\r\n        });\r\n  \r\n        loadUser();\r\n      } catch (error) {\r\n        dispatch({ type: LOGIN_FAILED });\r\n      }\r\n    };\r\n  \r\n    // Register User\r\n    const register = async formData => {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n  \r\n      try {\r\n        const res = await axios.post('/user', formData, config);\r\n        dispatch({\r\n          type: REGISTER_SUCCESS,\r\n          payload: res.data\r\n        });\r\n        //  try to load the user after they are registered.\r\n        loadUser();\r\n      } catch (error) {\r\n        dispatch({\r\n          type: REGISTER_FAIL,\r\n          payload: error.response.data.msg\r\n        });\r\n      }\r\n    };\r\n  \r\n    // Logout\r\n    const logout = () => dispatch({ type: LOGOUT });\r\n  \r\n    return (\r\n      <AuthContext.Provider\r\n        value={{\r\n          user: state.user,\r\n          username: state.username,\r\n          current: state.current,\r\n          isAuthenticated: state.isAuthenticated,\r\n          loading: state.loading,\r\n          carModel: state.carModel,\r\n          loadUser,\r\n          register,\r\n          getUsername,\r\n          login,\r\n          logout\r\n        }}\r\n      >\r\n        {props.children}\r\n      </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}